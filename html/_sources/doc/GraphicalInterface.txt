.. _gui-page:

|projname| GUI
=================================


|projname|'s GUI interface is designed to allow you to easily setup and run an analysis and to analyze the results of prior trials via a graphical interface, it contains the most commonly used features of |projname|.  The GUI contains a number of different modular panels for setting up an analysis, running it, and analyzing the results. Here we'll give you a brief overview of the different panels and their basic use. You can learn more about these features and their use in the examples we've included here.

    

**Opening the GUI**


If you installed |projname| from the precomiled binary, you can open the GUI by double clicking the |projname| icon. If you compiled the source code yourself, you can run the GUI from the terminal window -- navigate to the installation directory and type:

.. sourcecode:: console

     python mosaicgui/mosaicGUI.py



Interface Overview
------------------

.. figure:: ../images/GUI/mainpanels-panelLabel.png
   :width: 85 %
   :align: center

.. sidebar:: Panel Labels

The main interface consists of five different modules which we'll go over in detail later in this document. Briefly, these are:

A) *Analysis Setup*: This module is used to set up the analysis.
B) *Trajectory Viewer*: This module shows a time snippet of the ionic current trace, an all points histogram, is used to help set the baseline and threshold parameters found in the *Analysis Setup* (A) 
C) *Live Blockade Depth Histogram*: Once the data processing has started, this module shows a live blockade depth histogram; a query can be defined to restrict the histogram to data which fulfills a user-set criterion.  
D) *Live analysis statistics*: Displays live statistics about the data processed
E) *Event Viewer*: Displays the partitioned events and their fit. This panel is active only if "Write Events to Disk" is enabled in (A).

Modules A & B: Analysis Setup and Trajectory Viewer
---------------------------------------------------
.. figure:: ../images/GUI/panelab.png
   :width: 80 %
   :align: center
.. .. figure:: ../images/GUI/panela.png
..    :width: 30 %
..    :align: center

.. .. figure:: ../images/GUI/panel_b.png
..    :width: 50 %
..    :align: right

Module A: Analysis Setup
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ 

1. Data Settings
+++++++++++++

* **Path**: Directory containing analysis files. Click the "..." icon to navigate to the directory.

* **File Type**: Currently the GUI can be used to analyze either ABF or QDF Files, this field is automatically populated based on the files in the directory you've chosen.The **Rfb** and **Cfb** parameters are needed to correctly analyze QDF files (see ????? for more information)

* **Rfb & Cfb**: |projname| supports the QUB QDF file format used by the `Electronic Biosciences <http://electronicbio.com>`_ Nanopatch system. Two additional parameters, the feedback resistance (Rfb) in Ohms and capacitance (Cfb) in Farads are required to appropriately convert the stored measurement to ionic current.

* **Start** and **End**: These parameters allow you to analyze a specific time range of your data. Choose the starting and ending times If you'd like to analyze a small time segement of your data. If this is left blank, all data will be analyzed.

* **DC Offset**: If your measurement contains a DC offset, it can be manually corrected here. The absolute offset (not the correction) should be put here. This will be used to correct the measured current values in your data.

2. Baseline Current Detection
+++++++++++++
* :math:`\mu`: Mean baseline current, in pA. This is shown schematically in the trajectory viewer (see Label #8). When *Auto* is selected, this will be greyed out and labeled <auto>.
   
* :math:`\sigma`: Noise level (in pA). This is expected noise level of your baseline. Typically one would set this to the measured RMS noise of the open channel state at the sampling frequency. When *Auto* is selected, this will be greyed out and labeled <auto>.
   
* **Auto**: Checking this box enables automatic dectection of the mean baseline current (:math:`\mu`) noise level (:math:`\sigma`). When auto is enabled, the values chosen by the software will be displayed in the trajectory viewer module (see Label #10)

* **Block Size**:nControls the amount of data examined to determine the baseline. This also controls the amount of data shown in the trajectory viewer.

3. Event Partition Control
+++++++++++++

This panel is used to set the current threhold used for event detection *REF trajectory-viewer*

* **Algorithm**: Currently, the only event partitioning algoirthim enabled is *CurrentThreshold*. 

* **Threshold**: This is used to set the minimum current threshold used to partition events with *CurrentThreshold* algorithm.  

4.  Event Processing Setup
+++++++++++++

* **Event Processing Algorithm**: Currently, the only option shown in the GUI is stepResponseAnalysis. Other event response algorithims (including multistate fitting) are currently accessible only through the command line. 

* **Write Events to Disk**: When this box is checked, the data points for each partition events are written to the SQL database. When this is checked it is possible to view the individual fits of each  in the *Event Fits* module. 

.. hint:: When this is checked, your database can become extremely large! This is effectively writing out most of your entire dataset to the DB. Regardless of whether this box is checked, the fit parameters are *always* written out to the DB (this doesn't take up very much space).  
       
* **Parallel Processing** and **Processors**: Parallel processing can be enabled by checking this box. This box will be greyed out if the python module zmq is not installed on your system. The number of processors is chosen in the number box. Note that the GUI will occupy one processor, so choosing 3 processors will actually use 4 total processors, 3 for the processing and 1 for the gui.   

5. Plot Results and Advanced Settings
+++++++++++++

* **Event Fits**: Checking this box will show the events viewer (Module E). This can also be access through the file menu ``View>Plots>Event Fits``. This will be greyed out if *Write Events to Disk* is not enabled. 


* **Blockade Depth Histogram**: Checking this box will show the blockade depth histogram (Module C) This can also be access through the file menu ``View>Plots>Blockade Depth Histogram)``

*  **Advanced Settings**: This opens a dialog window to manually edit settings not otherwise accessible in the GUI.


Module B: Trajectory Viewer
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ 

This module shows a segment of the data time series. The file loaded into memory is shown in the top of the window. If multiple files are loaded, the final file loaded will be displayed. The length of the trajectory shwon is set by by *BlockSize* in Module A (see #2).

 
6.  Time Series (Trajectory)
+++++++++++++

* This shows the time series of the data, of length *BlockSize*. Other features in the module (such as histogram, denoising etc) utilize the data shown in the window for their calculations. Other segments of the data are not employed.

7.  All Points Histogram
+++++++++++++
* This shows a histogram of the time series data shown in #6. 

8. Dashed line indicates mean baseline current
+++++++++++++

9. Detection threshold level indicated by solid red line
+++++++++++++

10. Navigation, Denoising, and Statistics
+++++++++++++

* **Navigation Tools:** Tools to navigate the plot window are shown above. These can be used to either the trajectory or all points histogram windows. These controls cannot be used to advance to subsequent data files. This can be acomplished by the arrow bar at the bottom right.

* **Denoising** Wavelet denoising can be activated by clicking , the denoising level is enabled here, the level of denoising can be varied between 1 and 5. *See advanced tools for description of use.*

* **Baseline Statistics**: Value of mean baseline current, standard deviation of the open channel current, and the absolute threshold used for event detection (multiples of RMS noise listed in parenthesis) values correspond to the settings in the main window. If the baseline current detection is set to **auto** these values will update as each data segment is examined. The size of this segment is determined by the **Block Size** setting. In this screenshot, the time is set to 0.5 s


Modules C,D, & E: Blockade Depth Histogram, Statistics, and Event Viewer
---------------------------------------------------

Blockade Depth Histogram
^^^^^^^^^^^^^^^^^^^^^^^^

.. figure:: ../images/GUI/bd_hist.png
    :width: 50%
    :align: center

In this window, the blockade depth distribution of data which is currently being analyzed is shown. 

* **Filter** The data displayed in the histogram and be restricted to events which fulfill specific criteria. For instance, the default filter ResTime \> 0.025 instructs the software to only include events which last longer than 0.025 ms (25 us). Becuase all events are written out to a SQL database, this filter allows the different columns the table to be queried and events restricted. Further examples shown subsequently.

* **Bins**  The number of bins in the histogram are defined here. By default, 500 bins are used, but the user can change this to any appropriate value seen fit.
  
* **Detect Peaks** Checking the detect peaks enables a wavelet-based peak picking algorithm (**ref**). The wavelet level controls the sensitivity of the peak detection algorithim. Sliding it to the right will decrease the number of peaks picked up. Peaks found appear as red dots. The peak coordinates can be dispalyed by moving your mouse over the red dot, the coordinates will appear in the lower right hand corner of the window.

Statistics
^^^^^^^^^^

.. figure:: ../images/pyeventanalysis-documentation-gui-overview/statistics.png
    :width: 40%
    :align: center

Statistics window will pop up when you initiate processing. This window
displays the following information:

* **Events Processed**: Number of events which have been processed so far.

* **Processing Error**: Percentage of events for which fit has failed.

* **Capture Rate**: Estimate of mean capture rate, assuming a single exponentially distributed population.

* **Analysis Time**: How many seconds of data have been processed.


Event Viewer
^^^^^^^^^^^^
.. figure:: ../images/GUI/event_viewerpng.png
    :width: 50%
    :align: center

If *Write to Disk* is enabled, this dialog allows you to view the first 9999 events partitioned and their corresponding fit. This is a useful dialog for ensuring that you are getting meaningful fits and for investigating which events are not fit.

Console Log
^^^^^^^^^^^
.. figure:: ../images/GUI/console.png
    :width: 50%
    :align: center

Once processing has been completed, this dialog shows you a diagnostic log with the settings you used for processing and information about the number of events fit, baseline drift, and open channel conducatance. This file is written in the database and can also be accessed later.

Advanced Settings
^^^^^^^^^^^^^^^^^
.. figure:: ../images/GUI/advanced-settings.png
    :width: 50%
    :align: center

This dialog allows you to manually edit settings not otherwise accessible in the GUI. Further information about the settings can be found in **LINK**



.. include:: ../aliases.rst