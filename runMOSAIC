#! /usr/bin/env python
import sys
import mosaicgui.mosaicGUI as mosaicgui
from PyQt4 import QtCore
from mosaicgui.updateService import updateService
from mosaic.utilities.ga import registerLaunch
from PyQt4 import QtGui
import multiprocessing

from mosaicweb.run import startMOSAICWeb	
from mosaicgui.mplwidget import update_rcParams

import argparse

def parseCLIArgs():
	parser = argparse.ArgumentParser(description='Run the MOSAIC graphical interface')
	
	parser.add_argument('-w', '--web', dest='web', default=False, action='store_true', help='Run the MOSAIC web interface (default)')
	parser.add_argument('-q', '--qt', dest='qt', default=False, action='store_true', help='Run the MOSAIC Qt interface')
	
	args = vars(parser.parse_args())

	return args

@registerLaunch("qt")
def startMOSAIC():
	update_rcParams()
	
	app = QtGui.QApplication(sys.argv)

	u=updateService()	
	if not u.CheckUpdate():
		dmw = mosaicgui.qtAnalysisGUI()
		dmw.show()
		dmw.raise_()

		# cleanup processing
		app.connect(app, QtCore.SIGNAL("aboutToQuit()"), dmw.OnQuit)
	
		sys.exit(app.exec_())

if __name__ == '__main__':
	if sys.platform.startswith('win'):
		multiprocessing.freeze_support()
	
	cliArgs=parseCLIArgs()

	if cliArgs["qt"]:
		startMOSAIC()
	else:
		startMOSAICWeb()